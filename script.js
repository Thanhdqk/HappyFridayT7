const questions = [
  { question: "C√¢u 1: Xe n√†o kh√¥ng bao gi·ªù gi·∫£m ƒëi ?", answer: "Xe tƒÉng" },
  { question: "C√¢u 2: Hoa g√¨ lu√¥n ·ªü ph√≠a sau ?", answer: "Hoa h·∫≠u" },
  {
    question:
      "C√¢u 3: Con g√¨ kh√¥ng m·∫Øt, kh√¥ng tai, c√≥ ƒë·∫ßu c√≥ cu·ªëi ai ai c≈©ng nh·ªù ?",
    answer: "Con ƒë∆∞·ªùng",
  },
  { question: "C√¢u 4: ƒê·ªôc g√¨ c√†ng tr√∫ng c√†ng th√≠ch ?", answer: "ƒê·ªôc ƒë·∫Øc" },
  {
    question: "C√¢u 5: ƒÇn g√¨ kh√¥ng no nh∆∞ng ai c≈©ng th√≠ch ?",
    answer: "ƒÇn ti·ªÅn",
  },
  {
    question: "C√¢u 6: B·∫°ch m√£ tr·∫Øng, h·∫Øc m√£ ƒëen, v·∫≠y ng·ª±a √¥ m√†u g√¨ ?",
    answer: "M√†u ƒëen",
  },
  { question: "C√¢u 7: Cam g√¨ hay mua thi·∫øu?", answer: "Cam ch·ªãu" },
  {
    question: "C√¢u 8: Th∆∞∆°ng y√™u c·∫ßn h√†nh ƒë·ªông, v·∫≠y th∆∞∆°ng g√¨ c·∫ßn n√≥i nhi·ªÅu ?",
    answer: "Th∆∞∆°ng l∆∞·ª£ng",
  },
  { question: "C√¢u 9: C√°i g√¨ c√†ng c·∫ßm c√†ng d·ªÖ m·∫•t ?", answer: "C·∫ßm ƒë·ªì" },
  {
    question: "C√¢u 10: T√¥i c√≥ h√†m rƒÉng nh∆∞ng kh√¥ng c√≥ mi·ªáng, t√¥i l√† ai ?",
    answer: "Con ƒë∆∞·ªùng",
  },
  { question: "C√¢u 11: T·∫£o g√¨ b·ªã c·∫•m ?", answer: "T·∫£o h√¥n" },
  { question: "C√¢u 12: C√¢y g√¨ kh√¥ng c√≥ l√° ?", answer: "C√¢y c·ªôt ƒëi·ªán" },
  { question: "C√¢u 13: MƒÉng n√†o kh√¥ng m·ªçc ra t·ª´ tre ?", answer: "MƒÉng c·ª•t" },
  {
    question: "C√¢u 14: C√¢u g√¨ b·ªã nhi·ªÅu ng∆∞·ªùi kh√¥ng th√≠ch ?",
    answer: "C√¢u gi·ªù",
  },
  { question: "C√¢u 15: C√¢n n√†o bay ƒë∆∞·ª£c ?", answer: "C√¢n ƒë·∫©u v√¢n" },
  { question: "C√¢u 16: T·∫≠p g√¨ kh√¥ng d√πng ƒë·ªÉ vi·∫øt ?", answer: "T·∫≠p phim" },
  {
    question: "C√¢u 17: D·ªãch g√¨ kh√°ch h√†ng r·∫•t th√≠ch ?",
    answer: "D·ªãch v·ª• chƒÉm s√≥c kh√°ch h√†ng",
  },
  { question: "C√¢u 18: Con g√¨ ƒÉn l·ª≠a v·ªõi than ?", answer: "Con t√†u l·ª≠a" },
];

let currentIndex = 0;

// Khi modal m·ªü, t·∫£i c√¢u ƒë·∫ßu ti√™n
const modal = document.getElementById("myModal");
modal.addEventListener("shown.bs.modal", () => {
  loadQuestion(currentIndex);
});

function loadQuestion(index) {
  const q = questions[index];
  const questionEl = document.getElementById("modalLabel");
  const answerEl = document.getElementById("answer");

  // Fade out current
  questionEl.classList.remove("fade-in");
  answerEl.classList.remove("fade-in");
  questionEl.classList.add("fade-out");
  answerEl.classList.add("fade-out");

  setTimeout(() => {
    questionEl.innerText = q.question;
    //answerEl.innerText = q.answer;
    answerEl.innerText = `üí° ${q.answer}`;
    answerEl.style.display = "none";
    answerEl.style.opacity = 0;

    document.getElementById("showAnswerBtn").style.display = "inline-block";
    document.getElementById("hideAnswerBtn").style.display = "none";
    document.getElementById("questionIndex").innerText = `C√¢u ${index + 1}/${
      questions.length
    }`;

    // Fade in new
    questionEl.classList.remove("fade-out");
    answerEl.classList.remove("fade-out");
    questionEl.classList.add("fade-in");
    answerEl.classList.add("fade-in");
  }, 0);
}

function showAnswer() {
  const answer = document.getElementById("answer");
  answer.style.display = "inline-block";
  answer.style.opacity = 1;
  document.getElementById("showAnswerBtn").style.display = "none";
  document.getElementById("hideAnswerBtn").style.display = "inline-block";
}

function hideAnswer() {
  const answer = document.getElementById("answer");
  answer.style.opacity = 0;
  setTimeout(() => {
    answer.style.display = "none";
  }, 0);
  document.getElementById("showAnswerBtn").style.display = "inline-block";
  document.getElementById("hideAnswerBtn").style.display = "none";
}

function nextQuestion() {
  if (currentIndex < questions.length - 1) {
    currentIndex++;
    loadQuestion(currentIndex);
  } else {
    currentIndex = 0;
    loadQuestion(currentIndex);
  }
}

function prevQuestion() {
  if (currentIndex > 0) {
    currentIndex--;
    loadQuestion(currentIndex);
  } else {
    currentIndex = questions.length - 1;
    loadQuestion(currentIndex);
  }
}

particlesJS("particles-js", {
  particles: {
    number: { value: 60 },
    color: { value: "#ffffff" },
    shape: { type: "circle" },
    opacity: { value: 0.5 },
    size: { value: 3 },
    move: {
      enable: true,
      speed: 1,
      direction: "none",
      out_mode: "out",
    },
  },
  interactivity: {
    events: {
      onhover: { enable: true, mode: "repulse" },
    },
  },
  retina_detect: true,
});

// function playMusic() {
//   const music = document.getElementById("bgMusic");
//   music.volume = 0.3;
//   music.play().catch((err) => {
//     console.log("Tr√¨nh duy·ªát ch·∫∑n autoplay:", err);
//   });
// }

// document.addEventListener("DOMContentLoaded", function () {
//   const btnPlay = document.querySelector(".btn-start");
//   btnPlay.addEventListener("click", playMusic);
// });
